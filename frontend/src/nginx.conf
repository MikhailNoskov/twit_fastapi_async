user root;
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;


    upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    # for UNIX domain socket setups
        server unix:/tmp/gunicorn.sock fail_timeout=0;
    # for a TCP configuration
    # server 192.168.0.7:8000 fail_timeout=0;
  }

    server {
        listen 80;
        client_max_body_size 4G;
        server_name localhost;
        access_log  /frontend/logs/access.log;
        error_log   /frontend/logs/error.log;

        location /api {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://backend;
        }

        location /docs {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://backend;
        }

        location /static {
            root /;
        }


        location /stub_status {
            stub_status;
        }
        location / {
            root /frontend/;
            index index.html;
        }
    }
}
# daemon off;
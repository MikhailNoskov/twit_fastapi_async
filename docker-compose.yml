version: '3'
services:
  db:
    image: postgres:12
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"

    volumes:
      - ./db_data:/var/lib/postgresql/data
    container_name: db
    ports:
      - 5678:5432
    networks:
      - mike
    healthcheck:
      test:
        [
          "CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend/src
    image: backend
    container_name: backend
    restart: always
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/twitter
    command: bash -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push

    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - mike

  frontend:
    restart: always
    image: nginx
    container_name: frontend
    volumes:
      - ./frontend/src:/frontend
      - ./frontend/src/nginx.conf:/etc/nginx/nginx.conf:ro
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    ports:
      - "5600:80"
    depends_on:
      - backend
    networks:
      - mike

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - mike

  worker:
    build: ./backend/src
    command: celery -A celery_app worker --loglevel=info
    depends_on:
      - backend
      - redis
    container_name: worker
    networks:
      - mike

  grafana:
    image: grafana/grafana:9.2.15
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - mike
  loki:
    image: grafana/loki:2.8.0
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - mike

networks:
  mike:
    driver: bridge